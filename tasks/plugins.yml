---
# Install Elasticsearch Plugins (works only with the plugin script/system from ES => 2.0.0)
# You will need to define an array called 'elasticsearch_plugins' in your playbook or inventory, such that:
#
# elasticsearch_plugins:
#  - { name: '<plugin name>', url: '<[optional] plugin url>' }
#  - ...
# where if you were to install the plugin via bin/plugin, you would type:
#
# bin/plugin install <plugin name>
# or
# bin/plugin install <plugin url>

# Loop though elasticsearch_plugins and install them
- name: ES-Pugins-2 Removing Plugins if they exist
  action: >
    shell bin/plugin remove {{ item.name }}
    chdir={{ elasticsearch_home_dir }}
  with_items: elasticsearch_plugins
  ignore_errors: yes
  when: (elasticsearch_plugins is defined)

- name: Installing Plugins by Name (use for official plugins within the elasticsearch repo)
  action: >
    shell bin/plugin install {{ item.name }}
    chdir={{ elasticsearch_home_dir }}
  when: item.url is not defined
  with_items: elasticsearch_plugins
  ignore_errors: yes
  when: (elasticsearch_plugins is defined)

- name: Installing Plugins by URL (use for 3rd party plugins)
  action: >
    shell bin/plugin install {{ item.url }}
    chdir={{ elasticsearch_home_dir }}
  when: item.url is defined
  with_items: elasticsearch_plugins
  ignore_errors: yes
  when: (elasticsearch_plugins is defined)

# Install AWS Plugin (see https://github.com/elasticsearch/elasticsearch-cloud-aws)
# The following variables need to be defined in your playbook or inventory:
# - elasticsearch_plugin_aws_version
#
# The following variables provide a for now limited configuration for the plugin.
# More options may be available in the future.
# (see http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-discovery-ec2.html):
# - elasticsearch_plugin_aws_ec2_groups
# - elasticsearch_plugin_aws_ec2_ping_timeout
# - elasticsearch_plugin_aws_access_key
# - elasticsearch_plugin_aws_secret_key
# - elasticsearch_plugin_aws_region

- name: Removing AWS Plugin if it exists
  action: >
    shell bin/plugin remove cloud-aws
    chdir={{ elasticsearch_home_dir }}
  ignore_errors: yes
  when: (elasticsearch_plugin_aws_version is defined)

- name: Installing AWS Plugin
  action: >
    shell bin/plugin install cloud-aws
    chdir={{ elasticsearch_home_dir }}
  when: (elasticsearch_plugin_aws_version is defined)

# Install Marvel (see http://www.elasticsearch.org/guide/en/marvel/current/)
#
# The following variables need to be defined in your playbook or inventory:
# - elasticsearch_plugin_marvel_version
#
# The following variables provide configuration for the plugin.
# More options may be available in the future:
# - elasticsearch_plugin_marvel_agent_enabled
# - elasticsearch_plugin_marvel_agent_exporter_es_hosts
# - elasticsearch_plugin_marvel_agent_indices
# - elasticsearch_plugin_marvel_agent_interval
# - elasticsearch_plugin_marvel_agent_exporter_es_index_timeformat

- name: Removing Marvel Plugin if it exists
  action: >
    shell bin/plugin remove marvel
    chdir={{ elasticsearch_home_dir }}
  ignore_errors: yes
  when: (elasticsearch_plugin_marvel_version is defined)

- name: Installing Marvel Plugin
  action: >
    shell bin/plugin install elasticsearch/marvel/{{ elasticsearch_plugin_marvel_version }}
    chdir={{ elasticsearch_home_dir }}
  when: (elasticsearch_plugin_marvel_version is defined)

# Fix permissions
- name: Fix plugin file permission
  file:
    path: "{{ elasticsearch_plugin_dir }}"
    state: directory
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    recurse: yes

# List installed plugins
- name: Get installed plugins
  shell: bin/plugin list
  register: elasticsearch_plugin_list
  args:
    chdir: "{{ elasticsearch_home_dir }}"

- name: Output installed plugins
  debug:
    msg: "{{ elasticsearch_plugin_list.stdout }}"

